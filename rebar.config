{deps, [
    {hera, {git , "https://github.com/guiste10/hera.git" , {branch , "develop"}}},
    {hera_synchronization, {git, "https://github.com/bastinjul/hera_synchronization", {branch, "master"}}},
    {grisp, {git, "https://github.com/bastinjul/grisp.git", {ref, "a1e3f2c"}}},
    {epmd, {git, "https://github.com/erlang/epmd", {ref, "4d1a59"}}}
]}.

{erl_opts, [debug_info]}.

{grisp, [
    {otp, [
        {version, "22.0"}
    ]},

    {deploy , [
    % ==========
    % Mac OS X :
    % ==========
    %    {pre_script, "rm -rf /Volumes/GRISP/*"},
    %    {destination, "/Volumes/GRISP"},
    %    {post_script, "diskutil unmount /Volumes/GRISP"}
    % ==========
    % Linux :
    % ==========
         {pre_script , "rm -rf /media/julien/GRISP/*"} ,
         {destination , "/media/julien/GRISP"} ,
         {post_script , "umount /media/julien/GRISP"}
    ]}
]}.

%% == Shell ==
{ shell , [
    {apps , [sensor_fusion]} ,
    {config , "./config/test.config.src"}
]}.

{relx, [
    {release, {sensor_fusion, "0.1.0"}, [
        grisp ,
        {epmd , none} ,
        sensor_fusion,
        hera ,
        runtime_tools ,
        hera_synchronization
    ]} ,
    {dev_mode , false} ,
    {generate_start_script , true} ,
    {extended_start_script , true} ,
    {sys_config , "./config/sys.config"} ,
    {vm_args , "./config/vm.args"}
]}.

{ profiles , [
    {test , [
        {deps , [
             grisp_emulation
        ]} ,
        {dev_mode , true} ,
        {erl_opts , [
            nowarn_export_all ,
            debug_info
        ]} ,
        {relx , [
            {sys_config_src , "./config/test.config.src"} ,
            {release , {sensor_fusion , "0.1.0"} , [
                grisp ,
                {epmd , none} ,
                sensor_fusion,
                hera ,
                runtime_tools ,
                hera_synchronization
            ]}
        ]}
    ]}
]}.

%% == Dialyzer ==

{ dialyzer , [
    {warnings , [underspecs
        ,        no_return
        ,        unmatched_returns
        ,        error_handling]} ,
    {plt_prefix , "sensor_fusion"} ,
    {plt_apps , top_level_deps} ,
    {plt_extra_apps , []}
]}.

%% == EDoc ==

{ edoc_opts , [
    {report_missing_types , true} ,
    {source_path , ["src"]} ,
    {report_missing_types , true} ,
    {todo , true} ,
    {preprocess , true} ,
    {packages , false} ,
    {subpackages , false}
]}.
